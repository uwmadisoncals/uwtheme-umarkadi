// Colors
// ----------

//map of all colors
$swatch-colors: (
  primary: $primary-color,
  secondary: $secondary-color,
  success: $success-color,
  warning: $warning-color,
  alert: $alert-color,
  white: $white,
  lightest-gray: $lightest-gray,
  light-gray: $light-gray,
  medium-gray: $medium-gray,
  dark-gray: $dark-gray,
  darkest-gray: $darkest-gray,
  blue-gray: $blue-gray,
  black: $black
);

// generates rgb number values based on a hex color
@function rgb-name($color){
  @return red($color) + ', ' + green($color) + ', ' + blue($color);
}

// sets corresponding borders for items with solid-color backgrounds
@mixin corresponding-border($background-color) {
  border: 3px solid darken($background-color, 5%);
}
@mixin set-link-color($background-color) {

  @if color == $black {
    color: $light-gray;
    text-decoration: underline;
  }
}

@each $name, $color in $swatch-colors {

  // creates .(colorname)
  .#{$name} {
    color: $color;
  }
  // creates .(colorname)-border
  .#{$name}-border {
    border: 3px solid $color;
  }

  // creates .(colorname)-background - solid fill background color
  .#{$name}-background {
    background-color: $color;
    color: foreground($color, $yes: $black, $no: $white, $threshold: 60%);
    a {
      &:not(.uw-button), &:not(.button)  {
        color: foreground($color, $yes: $anchor-color, $no: $white, $threshold: 60%);
        text-decoration: underline;
        // border-bottom: 1px dotted foreground($color, $yes: transparent, $no: $white, $threshold: 60%);
        &:hover, &:focus {
          color: foreground($color, $yes: $anchor-color, $no: $white, $threshold: 60%);
          // border-bottom: 1px solid foreground($color, $yes: $anchor-color, $no: $white, $threshold: 60%);
        }
      }
    }
    h1, h2, h3, h4, h5, h6 {
      color: foreground($color, $yes: $black, $no: $white, $threshold: 50%);
    }
    .uw-content-box {
      h1, h2, h3, h4, h5, h6 {
        color: $black;
      }
    }
    .uw-row-header h2 {
      color: foreground($color, $yes: $primary-color, $no: $white, $threshold: 50%);
    }
    blockquote, blockquote p {
      color: foreground($color, $yes: $darkest-gray, $no: $white, $threshold: 60%);
    }
  }
    //outputs hex and rgb names for style guide swatches
    .#{$name}-hex::after {
      content: '#{$color}';
    }
    .#{$name}-rgb::after {
      content: '#{rgb-name($color)}';
    }
    // modifies .(colorname)-border if the background is also filled
    &.#{$name}-border {
      @include corresponding-border($color);
    }

  .uw-outer-row.#{$name}-background + .uw-outer-row.#{$name}-background {
    padding-top: 0;
  }


  // assigns corresponding border colors for callouts and buttons
  // .callout.#{$name}, .button.#{$name} {
  //   @include corresponding-border($color);
  //   color: foreground($color, $yes: $black, $no: $white, $threshold: 60%);
  //   a {
  //     color: foreground($color, $yes: $black, $no: $white, $threshold: 60%);
  //     text-decoration: underline;
  //     &:hover, &:focus {
  //     text-decoration: none;
  //     }
  //   }
  // }

} /* end of loop */



// for style guide display of colors
.swatch {
  width: 200px;
  height: 100px;
}
.swatch-info {
  width: 200px;
  height: auto;
  background: $white;
  margin: 0 0 2em 0;
  padding: .5em;
  li {
    list-style-type: none;
    margin: 0 0 .1em 0;
  }
}


/*
 * container background colors
 * These should be filtered out in favor of handling
 * background colors the same way across the site
 */

.uw-gray-med-bg {
  background-color: $medium-gray
}

.uw-white-bg {
  background-color: white;
}
.uw-red-bg {
  background-color: $primary-color;
}

.uw-red-bg, .uw-gray-med-bg {
  color: white;
  p,li,blockquote,a,a.uw-more-link,dd,dt,abbr,acronym,cite,strong {
    color: white !important;
  }
  svg {
    fill: white;
  }
  blockquote {
    font-weight: 500;
  }
  a {
    &.uw-more-link {
      color: white;
    }
  }
}
